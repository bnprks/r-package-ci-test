// Generated by cpp11: do not edit by hand
// clang-format off


#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// code.cpp
int my_minimum_cpp(uint64_t a, size_t b);
extern "C" SEXP _ci_package_my_minimum_cpp(SEXP a, SEXP b) {
  BEGIN_CPP11
    return cpp11::as_sexp(my_minimum_cpp(cpp11::as_cpp<cpp11::decay_t<uint64_t>>(a), cpp11::as_cpp<cpp11::decay_t<size_t>>(b)));
  END_CPP11
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_ci_package_my_minimum_cpp", (DL_FUNC) &_ci_package_my_minimum_cpp, 2},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_ci_package(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
